//
//Generated by Custom Weapon Creator
//

enum berettaAnimation
{
	BERETTA_IDLE1 = 0,
	BERETTA_IDLE2,
	BERETTA_IDLE3,
	BERETTA_SHOOT,
	BERETTA_SHOOT_EMPTY,
	BERETTA_RELOAD,
	BERETTA_RELOAD_NOT_EMPTY,
	BERETTA_DRAW,
	BERETTA_HOLSTER,
	BERETTA_ADD_SILENCER
};

class weapon_beretta : ScriptBasePlayerWeaponEntity
{
	private CBasePlayer@ m_pPlayer = null;
	int beretta_MAX_CLIP = 15;
	int beretta_MAX_AMMO = 250;
	int beretta_MAX_DMG = 35;
	int beretta_DEFAULT_GIVE = 15;
	float NEXT_ATTACK = 0.25;
	int m_iShotsFired;
	int m_iShell;
	
	void Spawn()
	{
		Precache();
		g_EntityFuncs.SetModel(self, "models/portal_house/w_9mmberetta.mdl");
		self.m_iDefaultAmmo = beretta_DEFAULT_GIVE;
		self.FallInit();
		m_iShotsFired = 0;
	}
	void Precache()
	{
		self.PrecacheCustomModels();
		g_Game.PrecacheModel( "models/portal_house/v_9mmberetta.mdl" );
		g_Game.PrecacheModel( "models/portal_house/p_9mmberetta.mdl" );
		g_Game.PrecacheModel( "models/portal_house/w_9mmberetta.mdl" );
		
		m_iShell = g_Game.PrecacheModel( "models/shell.mdl" );
		
		g_SoundSystem.PrecacheSound( "portal_house/weapons/beretta_fire1.wav" );
		g_SoundSystem.PrecacheSound( "hlclassic/weapons/reload1.wav" );
		g_SoundSystem.PrecacheSound( "hl/weapons/357_cock1.wav" );
	}
	bool GetItemInfo( ItemInfo& out info )
	{
		info.iMaxAmmo1 = beretta_MAX_AMMO;
		info.iMaxAmmo2 = -1;
		info.iMaxClip = beretta_MAX_CLIP;
		info.iSlot = 1;
		info.iPosition = 4;
		info.iWeight = 15;
		return true;
	}
	bool AddToPlayer(CBasePlayer@ pPlayer)
	{
		if ( !BaseClass.AddToPlayer( pPlayer ) )
			return false;

		@m_pPlayer = pPlayer;
		NetworkMessage message( MSG_ONE, NetworkMessages::WeapPickup, pPlayer.edict() );
		message.WriteLong( self.m_iId );
		message.End();
		return true;
	}
	bool PlayEmptySound()
	{
		if( self.m_bPlayEmptySound )
		{
			self.m_bPlayEmptySound = false;
			g_SoundSystem.EmitSoundDyn( m_pPlayer.edict(), CHAN_WEAPON, "hl/weapons/357_cock1.wav", 0.8, ATTN_NORM, 0, PITCH_NORM );
		}
		return false;
	}
	bool Deploy()
	{
		return self.DefaultDeploy( self.GetV_Model( "models/portal_house/v_9mmberetta.mdl" ), self.GetP_Model( "models/portal_house/p_9mmberetta.mdl" ), BERETTA_DRAW, "onehanded");
	}
	void Holster( int skiplocal = 0 )
	{
		self.m_fInReload = false;

		m_pPlayer.m_flNextAttack = g_WeaponFuncs.WeaponTimeBase() + 0.5;

		m_pPlayer.pev.viewmodel = 0;
	}
	void PrimaryAttack()
	{
		CBasePlayer@ pPlayer = m_pPlayer;
		
		if( self.m_iClip <= 0 )
		{
			self.PlayEmptySound();
			self.m_flNextPrimaryAttack = g_Engine.time + NEXT_ATTACK;
			return;
		}

		if (self.m_iClip <= 0)
		{
			self.PlayEmptySound();
			self.m_flNextPrimaryAttack = g_Engine.time + NEXT_ATTACK;
			return;
		}

		m_pPlayer.m_iWeaponVolume = NORMAL_GUN_VOLUME;
		m_pPlayer.m_iWeaponFlash = NORMAL_GUN_FLASH;

		--self.m_iClip;

		self.SendWeaponAnim( BERETTA_SHOOT, 0, 0 );
		g_SoundSystem.EmitSoundDyn(m_pPlayer.edict(), CHAN_WEAPON, "portal_house/weapons/beretta_fire1.wav", 1.0, ATTN_NORM, 0, 95 + Math.RandomLong(0, 10));

		// player "shoot" animation
		m_pPlayer.SetAnimation(PLAYER_ATTACK1);

		Vector vecSrc = m_pPlayer.GetGunPosition();
		Vector vecAiming = m_pPlayer.GetAutoaimVector(AUTOAIM_5DEGREES);

		m_pPlayer.FireBullets(1, vecSrc, vecAiming, VECTOR_CONE_6DEGREES, 8192, BULLET_PLAYER_CUSTOMDAMAGE, 2, beretta_MAX_DMG);

		if( self.m_iClip == 0 && m_pPlayer.m_rgAmmo( self.m_iPrimaryAmmoType ) <= 0 )
			m_pPlayer.SetSuitUpdate( "!HEV_AMO0", false, 0 );

		self.m_flNextPrimaryAttack = g_Engine.time + NEXT_ATTACK;
		self.m_flTimeWeaponIdle = g_Engine.time + g_PlayerFuncs.SharedRandomFloat( m_pPlayer.random_seed,  10, 15 );

		TraceResult tr;
		float x, y;
		g_Utility.GetCircularGaussianSpread( x, y );
		Vector vecDir = vecAiming
						+ x * VECTOR_CONE_6DEGREES.x * g_Engine.v_right 
						+ y * VECTOR_CONE_6DEGREES.y * g_Engine.v_up;

		Vector vecEnd	= vecSrc + vecDir * 4096;
		g_Utility.TraceLine( vecSrc, vecEnd, dont_ignore_monsters, m_pPlayer.edict(), tr );
		if( tr.flFraction < 1.0 )
		{
			if( tr.pHit !is null )
			{
				CBaseEntity@ pHit = g_EntityFuncs.Instance( tr.pHit );
				if( pHit is null || pHit.IsBSPModel() )
					g_WeaponFuncs.DecalGunshot( tr, BULLET_PLAYER_MP5 );
			}
		}
	}
	void Reload()
	{
		self.DefaultReload(beretta_MAX_CLIP, BERETTA_RELOAD, 1.50, 0);
		BaseClass.Reload();
	}
}
string GetberettaName()
{
	return "weapon_beretta";
}
void Registerberetta()
{
	g_CustomEntityFuncs.RegisterCustomEntity( "weapon_beretta", GetberettaName() );
	g_ItemRegistry.RegisterWeapon( GetberettaName(), "portal_house", "9mm" );
}
